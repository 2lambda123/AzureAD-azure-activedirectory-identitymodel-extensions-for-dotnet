<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.IdentityModel.KeyVaultExtensions</name>
    </assembly>
    <members>
        <member name="T:Microsoft.IdentityModel.KeyVaultExtensions.KeyVaultCryptoProvider">
            <summary>
            Provides cryptographic operators based on Azure Key Vault.
            </summary>
        </member>
        <member name="M:Microsoft.IdentityModel.KeyVaultExtensions.KeyVaultCryptoProvider.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.IdentityModel.KeyVaultExtensions.KeyVaultCryptoProvider"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.IdentityModel.KeyVaultExtensions.KeyVaultCryptoProvider.Create(System.String,System.Object[])">
            <summary>
            Returns a cryptographic operator that supports the algorithm.
            </summary>
            <param name="algorithm">the algorithm that defines the cryptographic operator.</param>
            <param name="args">the arguments required by the cryptographic operator. May be null.</param>
            <exception cref="T:System.ArgumentNullException">if <paramref name="algorithm"/> is null or empty.</exception>
            <exception cref="T:System.ArgumentNullException">if <paramref name="args"/> is null.</exception>
            <exception cref="T:System.NotSupportedException">if <paramref name="args"/> does not contain a <see cref="T:Microsoft.IdentityModel.KeyVaultExtensions.KeyVaultSecurityKey"/>.</exception>
            <remarks>call <see cref="M:Microsoft.IdentityModel.Tokens.ICryptoProvider.Release(System.Object)"/> when finished with the object.</remarks>
        </member>
        <member name="M:Microsoft.IdentityModel.KeyVaultExtensions.KeyVaultCryptoProvider.IsSupportedAlgorithm(System.String,System.Object[])">
            <summary>
            Called to determine if a cryptographic operation is supported.
            </summary>
            <param name="algorithm">the algorithm that defines the cryptographic operator.</param>
            <param name="args">the arguments required by the cryptographic operator. May be null.</param>
            <returns>true if supported</returns>
        </member>
        <member name="M:Microsoft.IdentityModel.KeyVaultExtensions.KeyVaultCryptoProvider.Release(System.Object)">
            <summary>
            Called to release the object returned from <see cref="M:Microsoft.IdentityModel.Tokens.ICryptoProvider.Create(System.String,System.Object[])"/>
            </summary>
            <param name="cryptoInstance">the object returned from <see cref="M:Microsoft.IdentityModel.Tokens.ICryptoProvider.Create(System.String,System.Object[])"/>.</param>
        </member>
        <member name="T:Microsoft.IdentityModel.KeyVaultExtensions.KeyVaultKeyWrapProvider">
            <summary>
            Provides wrap and unwrap operations using Azure Key Vault.
            </summary>
        </member>
        <member name="M:Microsoft.IdentityModel.KeyVaultExtensions.KeyVaultKeyWrapProvider.#ctor(Microsoft.IdentityModel.Tokens.SecurityKey,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.IdentityModel.KeyVaultExtensions.KeyVaultKeyWrapProvider"/> class.
            </summary>
            <param name="key">The <see cref="T:Microsoft.IdentityModel.Tokens.SecurityKey"/> that will be used for key wrap operations.</param>
            <param name="algorithm">The key wrap algorithm to apply.</param>
            <exception cref="T:System.ArgumentNullException">if <paramref name="key"/> is null.</exception>
            <exception cref="T:System.NotSupportedException">if <paramref name="key"/> is not a <see cref="T:Microsoft.IdentityModel.KeyVaultExtensions.KeyVaultSecurityKey"/>.</exception>
            <exception cref="T:System.ArgumentNullException">if <paramref name="algorithm"/> is null or empty.</exception>
        </member>
        <member name="M:Microsoft.IdentityModel.KeyVaultExtensions.KeyVaultKeyWrapProvider.#ctor(Microsoft.IdentityModel.Tokens.SecurityKey,System.String,Microsoft.Azure.KeyVault.IKeyVaultClient)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.IdentityModel.KeyVaultExtensions.KeyVaultKeyWrapProvider"/> class.
            </summary>
            <param name="key">The <see cref="T:Microsoft.IdentityModel.Tokens.SecurityKey"/> that will be used for key wrap operations.</param>
            <param name="algorithm">The key wrap algorithm to apply.</param>
            <param name="client">A mock <see cref="T:Microsoft.Azure.KeyVault.IKeyVaultClient"/> used for testing purposes.</param>
        </member>
        <member name="P:Microsoft.IdentityModel.KeyVaultExtensions.KeyVaultKeyWrapProvider.Algorithm">
            <summary>
            Gets the KeyWrap algorithm that is being used.
            </summary>
        </member>
        <member name="P:Microsoft.IdentityModel.KeyVaultExtensions.KeyVaultKeyWrapProvider.Context">
            <summary>
            Gets or sets a user context for a <see cref="T:Microsoft.IdentityModel.Tokens.KeyWrapProvider"/>.
            </summary>
            <remarks>This is null by default. This can be used by runtimes or for extensibility scenarios.</remarks>
        </member>
        <member name="P:Microsoft.IdentityModel.KeyVaultExtensions.KeyVaultKeyWrapProvider.Key">
            <summary>
            Gets the <see cref="T:Microsoft.IdentityModel.Tokens.SecurityKey"/> that is being used.
            </summary>
        </member>
        <member name="M:Microsoft.IdentityModel.KeyVaultExtensions.KeyVaultKeyWrapProvider.UnwrapKey(System.Byte[])">
            <summary>
            Unwrap a key.
            </summary>
            <param name="keyBytes">key to unwrap.</param>
            <exception cref="T:System.ArgumentNullException">if <paramref name="keyBytes"/> is null.</exception>
            <exception cref="T:System.ArgumentNullException">if <paramref name="keyBytes"/>.Length == 0.</exception>
            <returns>Unwrapped key.</returns>
        </member>
        <member name="M:Microsoft.IdentityModel.KeyVaultExtensions.KeyVaultKeyWrapProvider.WrapKey(System.Byte[])">
            <summary>
            Wrap a key.
            </summary>
            <param name="keyBytes">the key to be wrapped</param>
            <exception cref="T:System.ArgumentNullException">if <paramref name="keyBytes"/> is null.</exception>
            <exception cref="T:System.ArgumentNullException">if <paramref name="keyBytes"/>.Length == 0.</exception>
            <returns>wrapped key.</returns>
        </member>
        <member name="M:Microsoft.IdentityModel.KeyVaultExtensions.KeyVaultKeyWrapProvider.Dispose(System.Boolean)">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
            <param name="disposing">true, if called from Dispose(), false, if invoked inside a finalizer</param>
        </member>
        <member name="M:Microsoft.IdentityModel.KeyVaultExtensions.KeyVaultKeyWrapProvider.UnwrapKeyAsync(System.Byte[],System.Threading.CancellationToken)">
            <summary>
            Unwraps a symmetric key using Azure Key Vault.
            </summary>
            <param name="keyBytes">key to unwrap.</param>
            <param name="cancellation">Propagates notification that operations should be canceled.</param>
            <exception cref="T:System.ArgumentNullException">if <paramref name="keyBytes"/> is null.</exception>
            <exception cref="T:System.ArgumentNullException">if <paramref name="keyBytes"/>.Length == 0.</exception>
            <returns>Unwrapped key.</returns>
        </member>
        <member name="M:Microsoft.IdentityModel.KeyVaultExtensions.KeyVaultKeyWrapProvider.WrapKeyAsync(System.Byte[],System.Threading.CancellationToken)">
            <summary>
            Wraps a symmetric key using Azure Key Vault.
            </summary>
            <param name="keyBytes">the key to be wrapped</param>
            <param name="cancellation">Propagates notification that operations should be canceled.</param>
            <exception cref="T:System.ArgumentNullException">if <paramref name="keyBytes"/> is null.</exception>
            <exception cref="T:System.ArgumentNullException">if <paramref name="keyBytes"/>.Length == 0.</exception>
            <returns>wrapped key.</returns>
        </member>
        <member name="T:Microsoft.IdentityModel.KeyVaultExtensions.KeyVaultSecurityKey">
            <summary>
            Provides signing and verifying operations using Azure Key Vault.
            </summary>
        </member>
        <member name="T:Microsoft.IdentityModel.KeyVaultExtensions.KeyVaultSecurityKey.AuthenticationCallback">
            <summary>
            The authentication callback delegate which is to be implemented by the client code.
            </summary>
            <param name="authority">Identifier of the authority, a URL.</param>
            <param name="resource">Identifier of the target resource that is the recipient of the requested token, a URL.</param>
            <param name="scope">The scope of the authentication request.</param>
            <returns>An access token for Azure Key Vault.</returns>
        </member>
        <member name="M:Microsoft.IdentityModel.KeyVaultExtensions.KeyVaultSecurityKey.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.IdentityModel.KeyVaultExtensions.KeyVaultSecurityKey"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.IdentityModel.KeyVaultExtensions.KeyVaultSecurityKey.#ctor(System.String,Microsoft.IdentityModel.KeyVaultExtensions.KeyVaultSecurityKey.AuthenticationCallback)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.IdentityModel.KeyVaultExtensions.KeyVaultSecurityKey"/> class.
            </summary>
            <param name="keyIdentifier">The key identifier that is recognized by KeyVault.</param>
            <param name="callback">The authentication callback that will obtain the access_token for KeyVault.</param>
            <exception cref="T:System.ArgumentNullException">if <paramref name="keyIdentifier"/> is null or empty.</exception>
            <exception cref="T:System.ArgumentNullException">if <paramref name="callback"/>is null.</exception>
        </member>
        <member name="P:Microsoft.IdentityModel.KeyVaultExtensions.KeyVaultSecurityKey.Callback">
            <summary>
            The authentication callback delegate that retrieves an access token for the KeyVault.
            </summary>
        </member>
        <member name="P:Microsoft.IdentityModel.KeyVaultExtensions.KeyVaultSecurityKey.KeyId">
            <summary>
            The uniform resource identifier of the security key.
            </summary>
        </member>
        <member name="P:Microsoft.IdentityModel.KeyVaultExtensions.KeyVaultSecurityKey.KeySize">
            <summary>
            The size of the security key.
            </summary>
        </member>
        <member name="M:Microsoft.IdentityModel.KeyVaultExtensions.KeyVaultSecurityKey.Initialize">
            <summary>
            Retrieve the properties from Azure Key Vault.
            </summary>
        </member>
        <member name="T:Microsoft.IdentityModel.KeyVaultExtensions.KeyVaultSignatureProvider">
            <summary>
            Provides signing and verifying operations using Azure Key Vault.
            </summary>
        </member>
        <member name="M:Microsoft.IdentityModel.KeyVaultExtensions.KeyVaultSignatureProvider.#ctor(Microsoft.IdentityModel.Tokens.SecurityKey,System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.IdentityModel.KeyVaultExtensions.KeyVaultSignatureProvider"/> class.
            </summary>
            <param name="key">The <see cref="T:Microsoft.IdentityModel.Tokens.SecurityKey"/> that will be used for signature operations.</param>
            <param name="algorithm">The signature algorithm to apply.</param>
            <param name="willCreateSignatures">Whether this <see cref="T:Microsoft.IdentityModel.KeyVaultExtensions.KeyVaultSignatureProvider"/> is required to create signatures then set this to true.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="key"/>is null.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="algorithm"/>is null or empty.</exception>
        </member>
        <member name="M:Microsoft.IdentityModel.KeyVaultExtensions.KeyVaultSignatureProvider.#ctor(Microsoft.IdentityModel.Tokens.SecurityKey,System.String,System.Boolean,Microsoft.Azure.KeyVault.IKeyVaultClient)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.IdentityModel.KeyVaultExtensions.KeyVaultSignatureProvider"/> class.
            </summary>
            <param name="key">The <see cref="T:Microsoft.IdentityModel.Tokens.SecurityKey"/> that will be used for signature operations.</param>
            <param name="algorithm">The signature algorithm to apply.</param>
            <param name="willCreateSignatures">Whether this <see cref="T:Microsoft.IdentityModel.KeyVaultExtensions.KeyVaultSignatureProvider"/> is required to create signatures then set this to true.</param>
            <param name="client">A mock <see cref="T:Microsoft.Azure.KeyVault.IKeyVaultClient"/> used for testing purposes.</param>
        </member>
        <member name="M:Microsoft.IdentityModel.KeyVaultExtensions.KeyVaultSignatureProvider.Sign(System.Byte[])">
            <summary>
            Produces a signature over the 'input' using Azure Key Vault.
            </summary>
            <param name="input">The bytes to sign.</param>
            <returns>A signature over the input.</returns>
            <exception cref="T:System.ArgumentNullException">if <paramref name="input"/> is null.</exception>
            <exception cref="T:System.ArgumentNullException">if <paramref name="input"/>.Length == 0.</exception>
            <exception cref="T:System.ObjectDisposedException">If Dispose has been called.</exception>
        </member>
        <member name="M:Microsoft.IdentityModel.KeyVaultExtensions.KeyVaultSignatureProvider.Verify(System.Byte[],System.Byte[])">
            <summary>
            Verifies that the <paramref name="signature"/> is over <paramref name="input"/> using Azure Key Vault.
            </summary>
            <param name="input">bytes to verify.</param>
            <param name="signature">signature to compare against.</param>
            <returns>true if the computed signature matches the signature parameter, false otherwise.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="input"/> is null or has length == 0.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="signature"/> is null or has length == 0.</exception>
            <exception cref="T:System.ObjectDisposedException">If Dispose has been called.</exception>
        </member>
        <member name="M:Microsoft.IdentityModel.KeyVaultExtensions.KeyVaultSignatureProvider.Dispose(System.Boolean)">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
            <param name="disposing">true, if called from Dispose(), false, if invoked inside a finalizer</param>
        </member>
        <member name="M:Microsoft.IdentityModel.KeyVaultExtensions.KeyVaultSignatureProvider.SignAsync(System.Byte[],System.Threading.CancellationToken)">
            <summary>
            Creates a digital signature using Azure Key Vault.
            </summary>
            <param name="input">bytes to sign.</param>
            <param name="cancellation">Propagates notification that operations should be canceled.</param>
            <returns>A signature over the input.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="input"/> is null or has length == 0.</exception>
            <exception cref="T:System.ObjectDisposedException">If Dispose has been called.</exception>
        </member>
        <member name="M:Microsoft.IdentityModel.KeyVaultExtensions.KeyVaultSignatureProvider.VerifyAsync(System.Byte[],System.Byte[],System.Threading.CancellationToken)">
            <summary>
            Verifies a digital signature using Azure Key Vault.
            </summary>
            <param name="input">bytes to verify.</param>
            <param name="signature">signature to compare against.</param>
            <param name="cancellation">Propagates notification that operations should be canceled.</param>
            <returns>true if the computed signature matches the signature parameter, false otherwise.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="input"/> is null or has length == 0.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="signature"/> is null or has length == 0.</exception>
            <exception cref="T:System.ObjectDisposedException">If Dispose has been called.</exception>
        </member>
    </members>
</doc>
